An error occurred while trying to fetch /home/weight_pretrain/unet: Error no file named diffusion_pytorch_model.safetensors found in directory /home/weight_pretrain/unet.
Defaulting to unsafe serialization. Pass `allow_pickle=False` to raise an error instead.
/opt/conda/envs/chaos/lib/python3.10/site-packages/lightning/pytorch/utilities/parsing.py:208: Attribute 'unet' is an instance of `nn.Module` and is already saved during checkpointing. It is recommended to ignore them using `self.save_hyperparameters(ignore=['unet'])`.
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA GeForce RTX 3090') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
/opt/conda/envs/chaos/lib/python3.10/site-packages/lightning/pytorch/loggers/wandb.py:396: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
/opt/conda/envs/chaos/lib/python3.10/site-packages/lightning/pytorch/core/optimizer.py:377: Found unsupported keys in the optimizer configuration: {'interval', 'scheduler'}

  | Name | Type                 | Params | Mode
-----------------------------------------------------
0 | unet | UNet2DConditionModel | 859 M  | eval
-----------------------------------------------------
49.6 M    Trainable params
809 M     Non-trainable params
859 M     Total params
3,438.141 Total estimated model params size (MB)
32        Modules in train mode
686       Modules in eval mode
Epoch 52:  34%|████▍        | 37/109 [01:55<03:45,  0.32it/s, v_num=asuf, train_loss_step=0.00286, train_loss_epoch=0.00236]                                                                
/opt/conda/envs/chaos/lib/python3.10/site-packages/lightning/pytorch/trainer/connectors/logger_connector/result.py:431: It is recommended to use `self.log('train_loss', ..., sync_dist=True)` when logging on epoch level in distributed setting to accumulate the metric across devices.
